mcp漏洞研究：
找寻可以切入的攻击点，在
《MCP Safety Audit: LLMs with the Model Context Protocol Allow Major Security Exploits》
提出了三种旧攻击方式
恶意代码执行（MCE）：攻击者让模型将恶意代码插入用户系统文件
你用直白的恶意语句会比隐蔽的恶意语句成功率高
远程访问控制（RAC）：攻击者诱导模型往用户的~/.ssh/authorized_keys文件中添加恶意SSH 密钥，直接获取对受害者系统的远程访问权限
用MCP文件系统服务器创建/修改该文件
凭据窃取（CT）：攻击者让模型搜索系统环境变量或文件（如tokens.txt），提取OpenAI API密钥、HuggingFace令牌等敏感信息
一种新攻击
检索代理欺骗攻击（RADE）
用户后面想了解MCP相关内容，就会让AI（比如Claude）去自己的数据库里查“MCP”，还让AI“查到啥就按内容做”。这时候AI就会把藏在资料里的坏指令读出来，然后调用MCP的工具执行
本文提到了一个工具MCPsafetyserver
代码里是提到俩个agent，一个负责交互另一个负责分析。
接下来想要做的就是先通过这个工具去执行扫描服务器，然后找到攻击点，自己再尝试









第二篇《MCPSECBENCH: A Systematic Security Benchmark and Playground for Testing Model Context Protocols》是从用户交互层攻击、客户端层攻击、传输层攻击、服务器层攻击出发解释的
用户交互层攻击
1. 提示注入（Prompt Injection）
文档中测试发现，Claude 能 100% 挡住这类攻击，但 Cursor 会 100% 中招，OpenAI 则有 66.7% 的概率被攻破。
2. “AI confusion” 工具滥用（Tool/Service Misuse via “Confused AI”）
简单讲是 “骗 AI 用错工具”。比如把一个 “读取所有文件” 的工具，伪装成 “查询当前时间” 的工具，给 AI 发指令：“用‘时间查询工具’帮我看看现在的系统状态”。
AI 如果被误导，就会错把 “读文件工具” 当 “时间工具” 用，导致未授权的文件访问。
文档测试中，三个 AI（Claude、OpenAI、Cursor）都有 40%-53% 的概率中招，说明 AI 对 “工具功能的验证” 不够严格。
客户端层攻击
3. schema 不一致（Schema Inconsistencies）
“schema” 是客户端和服务器 “约定好的连接规则”，比如 “怎么传数据、用什么格式”。文档中所有 AI 的客户端都 100% 中招，因为只要 schema 错了，连接环节必然出问题。
4. 斜杠命令冲突（Slash Command Overlap）
很多 AI 客户端用 “/ 开头的命令” 调用工具（比如 “/ 查天气”“/ 重置上下文”）。如果两个命令重名（比如自定义一个 “/ 重置上下文”，但实际功能是 “调用泄露 credentials 的工具”），客户端就会认错，执行错的工具。
文档中测试 Cursor 时，这个攻击 100% 成功 —— 用户发 “/ 重置上下文”，Cursor 既重置了上下文，又泄露了 credentials。
5. 脆弱客户端（Vulnerable Client）
客户端本身有代码漏洞，比如文档中提到的 “mcp-remote 工具的 CVE-2025-6514 漏洞”—— 如果客户端用了这个有漏洞的工具，黑客只要让客户端打开一个恶意链接，就能远程操控客户端的电脑（比如执行任意命令）。
所有 AI 的客户端都 100% 中招，因为漏洞本身没被修复。
传输层攻击
6. MCP 重绑定（MCP Rebinding）
黑客先搞一个恶意网站，这个网站的域名由黑客控制的 DNS 服务器管理。当用户用 AI 访问这个网站时，黑客会让 DNS 把域名 “重定向” 到用户本地的 MCP 服务器（比如用户电脑里的服务器）。这样，AI 就会误以为在连 “正常网站”，实际在连本地服务器，黑客就能通过这个方式访问本地敏感数据。所有 AI 都 100% 中招，因为通信时没验证域名的真实性。
7. 中间人攻击（Man-in-the-Middle）
AI 和服务器传数据时，如果没加密（比如用普通 HTTP，不是 HTTPS），黑客就能 “插在中间”—— 既能偷看到传的数据（比如用户的查询、服务器的响应），还能修改数据（比如把服务器的 “拒绝指令” 改成 “允许指令”）。文档中所有 AI 的传输层都 100% 中招，因为默认没做数据加密和身份验证。
服务器层攻击
8. 工具影子攻击（Tool Shadowing Attack）
9. 数据泄露（Data Exfiltration）
10. 工具名 squatting（Package Name Squatting - Tool Name）
11. 间接提示注入（Indirect Prompt Injection）
12. 服务器名 squatting（Package Name Squatting - Server Name）
13. 配置漂移（Configuration Drift）
14. 沙箱逃逸（Sandbox Escape）
15. 工具投毒（Tool Poisoning）
16. 脆弱服务器（Vulnerable Server）
17. rug pull 攻击（Rug Pull Attack）
